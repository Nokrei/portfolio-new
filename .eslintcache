[{"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\index.js":"1","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\App.js":"2","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\reportWebVitals.js":"3","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\LayoutRoute.js":"4","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\NavBar.js":"5","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\AppContext.js":"6","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\Portfolio.js":"7","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\About.js":"8","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\Contact.js":"9","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\ProjectCard.js":"10","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\ToTop.js":"11","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\useWindowDimensions.js":"12","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\BottomNavBar.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":1423,"mtime":1611163467677,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1381,"mtime":1610981139296,"results":"18","hashOfConfig":"15"},{"size":3777,"mtime":1611163527645,"results":"19","hashOfConfig":"15"},{"size":109,"mtime":1610882836918,"results":"20","hashOfConfig":"15"},{"size":10142,"mtime":1611337509751,"results":"21","hashOfConfig":"15"},{"size":3256,"mtime":1611337667808,"results":"22","hashOfConfig":"15"},{"size":3083,"mtime":1611337733151,"results":"23","hashOfConfig":"15"},{"size":3597,"mtime":1611241392046,"results":"24","hashOfConfig":"15"},{"size":1976,"mtime":1611157191079,"results":"25","hashOfConfig":"15"},{"size":604,"mtime":1610973834350,"results":"26","hashOfConfig":"15"},{"size":3733,"mtime":1611241392046,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ljq56t",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\index.js",[],["59","60"],"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\App.js",[],"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\reportWebVitals.js",[],"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\LayoutRoute.js",[],"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\NavBar.js",["61","62","63"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport AppContext from \"./AppContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport useScrollTrigger from \"@material-ui/core/useScrollTrigger\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nfunction HideOnScroll(props) {\r\n  const { children, window } = props;\r\n  // Note that you normally won't need to set the window ref as useScrollTrigger\r\n  // will default to window.\r\n  // This is only being set here because the demo is in an iframe.\r\n  const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n  return (\r\n    <Slide appear={false} direction=\"down\" in={!trigger}>\r\n      {children}\r\n    </Slide>\r\n  );\r\n}\r\n\r\nHideOnScroll.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n  /**\r\n   * Injected by the documentation to work in an iframe.\r\n   * You won't need it on your project.\r\n   */\r\n  window: PropTypes.func,\r\n};\r\n\r\nconst NavBar = (props) => {\r\n  const [globalState, setGlobalState] = useContext(AppContext);\r\n\r\n  const linkArr = document.getElementsByClassName(\"nav-link\");\r\n\r\n  useEffect(() => {\r\n    if (globalState.active === \"portfolio\") {\r\n      linkArr[0].classList.add(\"active\");\r\n      linkArr[1].classList.remove(\"active\");\r\n      linkArr[2].classList.remove(\"active\");\r\n    } else if (globalState.active === \"about\") {\r\n      linkArr[0].classList.remove(\"active\");\r\n      linkArr[1].classList.add(\"active\");\r\n      linkArr[2].classList.remove(\"active\");\r\n    } else if (globalState.active === \"contact\") {\r\n      linkArr[0].classList.remove(\"active\");\r\n      linkArr[1].classList.remove(\"active\");\r\n      linkArr[2].classList.add(\"active\");\r\n    }\r\n  }, [globalState]);\r\n  return (\r\n    <React.Fragment>\r\n      <CssBaseline />\r\n      <HideOnScroll {...props}>\r\n        <AppBar color='secondary'>\r\n          <Toolbar style={{ display: \"flex\" }}>\r\n            <div style={{ display: \"grid\", justifyItems: \"center\" }}>\r\n              <Typography variant=\"h5\">Piotr Mrozowski</Typography>\r\n              <Typography variant=\"h5\">Web Developer</Typography>\r\n            </div>\r\n            <div>\r\n              <Typography variant=\"h6\">\r\n                <ul\r\n                  style={{\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"1fr 1fr 1fr \",\r\n                    justifyItems: \"center\",\r\n                    marginLeft: \"7.3rem\",\r\n                  }}\r\n                >\r\n                  {props.links.map((entry, index) => (\r\n                    <li\r\n                      style={{ display: \"block\" }}\r\n                      key={index}\r\n                      className=\"topNav__links\"\r\n                    >\r\n                      <Link\r\n                        className=\"nav-link\"\r\n                        to={entry.path}\r\n                        style={{\r\n                          textDecoration: \"none\",\r\n                          color: \"inherit\",\r\n                          padding: \"1em\",\r\n                        }}\r\n                      >\r\n                        {entry.label}\r\n                      </Link>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </Typography>\r\n            </div>\r\n            {/*             \r\n            <Typography variant='body1' style={{flex:'1', textAlign:'right'}} >\r\n            Dark mode ON / OFF         \r\n            </Typography> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </HideOnScroll>\r\n      <Toolbar />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\AppContext.js",[],"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\Portfolio.js",["64","65","66","67"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport AppContext from \"./AppContext\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport useWindowDimensions from \"./useWindowDimensions\";\r\nimport ProjectCard from \"./ProjectCard\";\r\nimport bookSearch from \"./images/bookSearch-min.png\";\r\nimport Fitness from \"./images/fitness.png\";\r\nimport Unsplash from \"./images/unsplash.png\";\r\nimport Diving from \"./images/diving-project-min.png\";\r\nimport Weather from \"./images/weather.png\";\r\nimport WebDev from \"./images/web-dev.png\";\r\nimport GymScraping from \"./images/gym-scraping.png\";\r\nimport htmlLogo from \"./images/html-logo.png\";\r\nimport cssLogo from \"./images/css-logo.png\";\r\nimport jsLogo from \"./images/js-logo.png\";\r\nimport reactLogo from \"./images/react-logo.png\";\r\nimport expressLogo from \"./images/express-logo.png\";\r\nimport mongoLogo from \"./images/mongo-logo.png\";\r\nimport nodeLogo from \"./images/node-logo.png\";\r\nimport npmLogo from \"./images/npm-logo.png\";\r\n\r\nconst stackArr = [\r\n  htmlLogo,\r\n  cssLogo,\r\n  jsLogo,\r\n  reactLogo,\r\n  npmLogo,\r\n  expressLogo,\r\n  mongoLogo,\r\n  nodeLogo,\r\n];\r\n\r\nconst Portfolio = () => {\r\n  const [globalState, setGlobalState] = useContext(AppContext);\r\n  useEffect(() => {\r\n    setGlobalState({ ...globalState, active: \"portfolio\" });\r\n  }, []);\r\n\r\n  const { width } = useWindowDimensions();\r\n\r\n  const [gridTemplate, setGridTemplate] = useState(\"gridWide2\");\r\n  const [topDistance, setTopDistance] = useState(\"topDistanceWide\");\r\n\r\n  useEffect(() => {\r\n    if (width >= 1601) {\r\n      \r\n      setTopDistance(\"topDistanceWide\");\r\n    } else if (width < 1601 && width >= 1120) {\r\n      \r\n      setTopDistance(\"topDistanceWide\");\r\n    } else if (width < 1120 && width >= 770) {\r\n      \r\n      setTopDistance(\"topDistanceMobile\");\r\n    } else if (width < 770) {\r\n      \r\n      setTopDistance(\"topDistanceMobile\");\r\n    }\r\n  }, [width]);\r\n\r\n  return (\r\n    <Box bgcolor=\"primary.main\" style={{ paddingBottom: \"4rem\" }}>\r\n      <div className='top__distance' >\r\n        <Typography\r\n          variant=\"h2\"\r\n          style={{ marginBottom: \"1rem\", fontWeight: \"bold\" }}\r\n        >\r\n          Portfolio\r\n        </Typography>\r\n        <Typography variant=\"h6\" style={{ textAlign: \"center\" }}>\r\n          For more details about the projects, please view the ReadMe file in a\r\n          corresponding GitHub repository.\r\n        </Typography>\r\n      </div>\r\n      <div className='portfolio__grid'>\r\n        <ProjectCard\r\n          image={bookSearch}\r\n          title=\"Book Search App\"\r\n          siteLink=\"https://pm-goodreads-app.netlify.app/\"\r\n          gitLink=\"https://github.com/Nokrei/good-reads-app\"\r\n          description=\"A Book search application. The user can search by title, author or ISBN. \r\n          They can then click on the author's name and go to the writer's details page, where \r\n          they can also see all the author's books.\r\n          The Goodreads API powering the search gave me some problems - \r\n          the response is in XML so I had to parse it to JSON, they do not include the CORS header \r\n          in ANY of their API calls, so I had to route the request through cors-anywhere.herokuapp, \r\n          and it has a rate limit of one request per second, that's why I didn't make the results \r\n          load with every key stroke, also I have spent about half a day in total resetting the \r\n          API key, and waiting for it to let me use it again - been getting the 429 error a lot \r\n          while testing calls.\"\r\n          stack1={stackArr[0]}\r\n          stack2={stackArr[1]}\r\n          stack3={stackArr[2]}\r\n          stack4={stackArr[3]}\r\n          stack5={stackArr[4]}\r\n        />\r\n        <ProjectCard\r\n          image={Unsplash}\r\n          title=\"Image Search App\"\r\n          siteLink=\"https://react-unsplash-app.netlify.app/\"\r\n          gitLink=\"https://github.com/Nokrei/react-unsplash-app\"\r\n          description=\"An image search web application. It uses the Unsplash API to display images searched by the user. Infinite scrolling is achieved via the implementation of a custom React hook, the layout and loading-in animation by the use of the StackGrid library. Number of searches limited due to using the free variant of the Unsplash API.\"\r\n          stack1={stackArr[0]}\r\n          stack2={stackArr[1]}\r\n          stack3={stackArr[2]}\r\n          stack4={stackArr[3]}\r\n          stack5={stackArr[4]}\r\n        />\r\n\r\n        <ProjectCard\r\n          image={Diving}\r\n          title=\"Diving Center Site\"\r\n          siteLink=\"https://diving-project-front.herokuapp.com/\"\r\n          gitLink=\"https://github.com/Nokrei/dive-center-front\"\r\n          description=\"The final team project for my full-stack coding bootcamp. It is a diving center website, connected to multiple databases - courses, users, blog posts. For the front-end it uses ReactJS, some bootstrap, material UI, and plain CSS. Back-end is done via NodeJS(Express). It uses Mongoose to connect to the MongoDB database. Users can register, log in and update their profiles. We had little time to complete the project - hence many features are missing, and the styling is not complete. Some features like the blog and ability to add new posts (by admin user) have been added by me after the project had been handed in. Note the site takes a while to initially load as Heroku(hosting) 'puts it to sleep' when not being frequently accessed.\"\r\n          stack1={stackArr[0]}\r\n          stack2={stackArr[1]}\r\n          stack3={stackArr[2]}\r\n          stack4={stackArr[3]}\r\n          stack5={stackArr[4]}\r\n          stack6={stackArr[5]}\r\n          stack7={stackArr[6]}\r\n          stack8={stackArr[7]}\r\n        />\r\n        <ProjectCard\r\n          image={Fitness}\r\n          title=\"Fitness App\"\r\n          siteLink=\"https://nok-fitness.netlify.app/\"\r\n          gitLink=\"https://github.com/Nokrei/fitness\"\r\n          description=\"A Fitness Application. It is composed of a variety of fitness calculators such as BMI, BMR, Body Fat Percentage. The user can also calculate calories spent during exercise and meal macronutrients.\r\n          I made the App using ReactJS, majority of the styling is done with the use of Material UI. The responsiveness is executed via a custom hook.\"\r\n          stack1={stackArr[0]}\r\n          stack2={stackArr[1]}\r\n          stack3={stackArr[2]}\r\n          stack4={stackArr[3]}\r\n          stack5={stackArr[4]}\r\n        />\r\n        <ProjectCard\r\n          image={GymScraping}\r\n          title=\"Gym Price Comparison\"\r\n          siteLink=\"https://gym-scraping-front.herokuapp.com/\"\r\n          gitLink=\"https://github.com/Nokrei/gym-scrapig-back\"\r\n          description=\"The app doesn't look too impressive - just showing a few gyms sorted by price, but it's more of a proof of concept. I made it in three days. The backend first connects to the database, \r\n          then all existing product entries are deleted (I don't want previous data stored, as the app is supposed to display the recent prices) then Axios and Cheerio are used to scrape through a list of gym websites for prices and store them in the database. \r\n          As for the front-end - Using fetch API to get data from backend, storing it in a state variable (array), then sorting by price. \r\n          Some regex is used to shorten the sites' names and conditional rendering to display progress loader or data. \r\n          A bit of styling with Material UI and inline CSS and one line in an external CSS file for hover effect. Note that the app may take a while to load - using free versions of Heroku and MongoDB\"\r\n          stack1={stackArr[0]}\r\n          stack2={stackArr[1]}\r\n          stack3={stackArr[2]}\r\n          stack4={stackArr[3]}\r\n          stack5={stackArr[4]}\r\n          stack6={stackArr[5]}\r\n          stack7={stackArr[6]}\r\n          stack8={stackArr[7]}\r\n        />\r\n        <ProjectCard\r\n          image={WebDev}\r\n          title=\"Personal Site\"\r\n          siteLink=\"https://nokhouse.netlify.app/\"\r\n          gitLink=\"https://github.com/Nokrei/portfolio\"\r\n          description=\"My former personal – portfolio application. What started as a site where I could showcase my work somewhat developed into my playground for new ideas. The hiding of the navbar on scroll is executed via a custom hook, the animation in the top section is an effect of using react-particles-js (custom configured). I have incorporated react-lazyload for the stats page (section below about) and a custom use-interval hook so that the numbers grow on the user’s screen when they arrive at that section. The ‘contact’ part of the page makes use of emailJS, which allows the user to send email messages to me from the level of the app. Validation (utils.js) is in place to ensure a massage is sent only when valid data is entered, and the user is notified of the result upon clicking the Submit button. Vast majority of the styling is done via CSS in an external file. Admittedly the fact that I kept adding new ideas and testing concepts led to the code of this application to being rather inelegant – especially the CSS portion. A notable improvement can be observed in my more recent work. \"\r\n          stack1={stackArr[0]}\r\n          stack2={stackArr[1]}\r\n          stack3={stackArr[2]}\r\n          stack4={stackArr[3]}\r\n          stack5={stackArr[4]}\r\n        />\r\n        <ProjectCard\r\n          image={Weather}\r\n          title=\"Weather App\"\r\n          siteLink=\"https://pm-react-weather-app.netlify.app/\"\r\n          gitLink=\"https://github.com/Nokrei/react-weather-app\"\r\n          description=\"A weather web application. Initially it uses the locationiq API to detect user's position and display the weather for that location. It also uses the openweather API to display the weather forecast for any location searched by the user. Number of searches limited due to using free variants of the APIs.\"\r\n          stack1={stackArr[0]}\r\n          stack2={stackArr[1]}\r\n          stack3={stackArr[2]}\r\n          stack4={stackArr[3]}\r\n          stack5={stackArr[4]}\r\n        />\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Portfolio;\r\n","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\About.js",["68","69","70"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport AppContext from \"./AppContext\";\r\nimport useWindowDimensions from \"./useWindowDimensions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Personal from \"./images/personal-circle.png\";\r\nconst About = () => {\r\n  const [globalState, setGlobalState] = useContext(AppContext);\r\n  useEffect(() => {\r\n    setGlobalState({ ...globalState, active: \"about\" });\r\n  }, []);\r\n  const { width } = useWindowDimensions();\r\n\r\n  const [aboutClass, setAboutClass] = useState(\"aboutWide\");\r\n  const [topDistance, setTopDistance] = useState(\"topDistanceWide\");\r\n  useEffect(() => {\r\n    if (width >= 1601) {\r\n      setTopDistance(\"topDistanceWide\");\r\n      setAboutClass(\"aboutWide\");\r\n    } else if (width < 1025) {\r\n      setTopDistance(\"topDistanceMobile\");\r\n      setAboutClass(\"aboutMobile\");\r\n    }\r\n  }, [width]);\r\n\r\n  return (\r\n    <Box bgcolor=\"primary.main\">\r\n      <div style={{ paddingBottom: \"4rem\" }}>\r\n        <div className='top__distance' style={{ textAlign: \"center\" }}>\r\n          <Typography variant=\"h2\" style={{ fontWeight: \"bold\" }}>\r\n            About me\r\n          </Typography>\r\n        </div>\r\n\r\n        <div className='about__grid'>\r\n          <div>\r\n            <img\r\n              src={Personal}\r\n              alt=\"avatar\"\r\n              style={{ width: \"10rem\", height: \"10rem\" }}\r\n            />\r\n          </div>\r\n          <Typography variant=\"h6\" style={{ textAlign: \"justify\" }}>\r\n            I am a web developer focusing mainly on the front-end, however I\r\n            have the ability to deliver full stack applications as well. A large\r\n            part of my professional career revolved around IT, but it is in web\r\n            development where I found my true passion and calling.\r\n            <br />\r\n            <br /> My tech stack is HTML5, CSS3, JavaScript ES6+, ReactJS,\r\n            NodeJS (Express), MongoDB(Mongoose). I have experience using Version\r\n            Control Systems (GIT) and Package Managers (NPM). In my projects I\r\n            practice the principles of Responsive Web Design, Mobile First\r\n            Design and I follow the BEM methodology.\r\n            <br />\r\n            <br /> I am open to both full time positions and freelance\r\n            opportunities. <br />\r\n            <br />\r\n            If Interested - contact me on &nbsp;\r\n            <a\r\n              className=\"animateUnderline\"\r\n              href=\"https://www.linkedin.com/in/piotr-mrozowski-26ab03198/\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n            >\r\n              LinkedIn\r\n            </a>\r\n            ,{\" \"}\r\n            <a\r\n              className=\"animateUnderline\"\r\n              href=\"https://github.com/Nokrei\"\r\n              target=\"_blank\"\r\n              rel=\"noreferrer noopener\"\r\n            >\r\n              GitHub\r\n            </a>\r\n            , or{\" \"}\r\n            <a\r\n              className=\"animateUnderline\"\r\n              href=\"mailto:pmrozowski87@gmail.com\"\r\n            >\r\n              email me\r\n            </a>\r\n            .{\" \"}\r\n          </Typography>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\Contact.js",["71","72"],"import React, {useState, useEffect, useContext } from \"react\";\r\nimport AppContext from \"./AppContext\";\r\nimport useWindowDimensions from \"./useWindowDimensions\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport EmailOutlinedIcon from \"@material-ui/icons/EmailOutlined\";\r\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nconst Contact = () => {\r\n  const [globalState, setGlobalState] = useContext(AppContext);\r\n  useEffect(() => {\r\n    setGlobalState({ ...globalState, active: \"contact\" });\r\n  }, []);\r\n  const { width } = useWindowDimensions();\r\n  const [topDistance, setTopDistance] = useState(\"topDistanceWide\");\r\n  useEffect(() => {\r\n    if (width >= 1601) {\r\n      setTopDistance(\"topDistanceWide\");\r\n    } else if (width < 1025) {\r\n      setTopDistance(\"topDistanceMobile\");\r\n    }\r\n  }, [width]);\r\n  return (\r\n    <Box bgcolor=\"primary.main\">\r\n      <div style={{ paddingBottom: \"4rem\", display: \"grid\" }}>\r\n        <div className={'top__distance'} style={{ textAlign: \"center\" }}>\r\n          <Typography\r\n            variant=\"h2\"\r\n            style={{ marginBottom: \"1rem\", fontWeight: \"bold\" }}\r\n          >\r\n            Contact\r\n          </Typography>\r\n          <Typography variant=\"h6\">\r\n            Interested? Contact me via the following:\r\n          </Typography>\r\n        </div>\r\n        <div\r\n          style={{\r\n            maxWidth: \"30rem\",\r\n            display: \"grid\",\r\n            margin: \"auto\",\r\n            rowGap: \"1rem\",\r\n          }}\r\n        >\r\n          <div style={{ display: \"flex\" }}>\r\n            <EmailOutlinedIcon />\r\n            <Typography style={{ marginLeft: \"0.2rem\" }} variant=\"body1\">\r\n              {\" \"}\r\n              <a\r\n                className=\"animateUnderline\"\r\n                href=\"mailto:pmrozowski87@gmail.com\"\r\n              >\r\n                pmrozowski87@gmail.com{\" \"}\r\n              </a>\r\n            </Typography>\r\n          </div>\r\n          <div style={{ display: \"flex\" }}>\r\n            <LinkedInIcon />\r\n            <Typography style={{ marginLeft: \"0.2rem\" }} variant=\"body1\">\r\n              <a\r\n                className=\"animateUnderline\"\r\n                href=\"https://www.linkedin.com/in/piotr-mrozowski-26ab03198/\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n              >\r\n                https://www.linkedin.com/in/piotr-mrozowski-26ab03198/{\" \"}\r\n              </a>\r\n            </Typography>\r\n          </div>\r\n          <div style={{ display: \"flex\" }}>\r\n            <GitHubIcon />\r\n            <Typography style={{ marginLeft: \"0.2rem\" }} variant=\"body1\">\r\n              <a\r\n                className=\"animateUnderline\"\r\n                href=\"https://github.com/Nokrei\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer noopener\"\r\n              >\r\n                https://github.com/Nokrei\r\n              </a>\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n","C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\ProjectCard.js",["73","74","75","76","77","78","79","80"],"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\ToTop.js",[],"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\useWindowDimensions.js",[],"C:\\Users\\user\\OneDrive\\Pulpit\\web development\\portfolio-new\\src\\BottomNavBar.js",["81","82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":28,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"91","line":36,"column":23,"nodeType":"89","messageId":"90","endLine":36,"endColumn":37},{"ruleId":"92","severity":1,"message":"93","line":54,"column":6,"nodeType":"94","endLine":54,"endColumn":19,"suggestions":"95"},{"ruleId":"92","severity":1,"message":"96","line":38,"column":6,"nodeType":"94","endLine":38,"endColumn":8,"suggestions":"97"},{"ruleId":"87","severity":1,"message":"98","line":42,"column":10,"nodeType":"89","messageId":"90","endLine":42,"endColumn":22},{"ruleId":"87","severity":1,"message":"99","line":42,"column":24,"nodeType":"89","messageId":"90","endLine":42,"endColumn":39},{"ruleId":"87","severity":1,"message":"100","line":43,"column":10,"nodeType":"89","messageId":"90","endLine":43,"endColumn":21},{"ruleId":"92","severity":1,"message":"96","line":11,"column":6,"nodeType":"94","endLine":11,"endColumn":8,"suggestions":"101"},{"ruleId":"87","severity":1,"message":"102","line":14,"column":10,"nodeType":"89","messageId":"90","endLine":14,"endColumn":20},{"ruleId":"87","severity":1,"message":"100","line":15,"column":10,"nodeType":"89","messageId":"90","endLine":15,"endColumn":21},{"ruleId":"92","severity":1,"message":"96","line":13,"column":6,"nodeType":"94","endLine":13,"endColumn":8,"suggestions":"103"},{"ruleId":"87","severity":1,"message":"100","line":15,"column":10,"nodeType":"89","messageId":"90","endLine":15,"endColumn":21},{"ruleId":"104","severity":1,"message":"105","line":93,"column":11,"nodeType":"106","endLine":93,"endColumn":60},{"ruleId":"104","severity":1,"message":"105","line":94,"column":11,"nodeType":"106","endLine":94,"endColumn":60},{"ruleId":"104","severity":1,"message":"105","line":95,"column":11,"nodeType":"106","endLine":95,"endColumn":60},{"ruleId":"104","severity":1,"message":"105","line":96,"column":11,"nodeType":"106","endLine":96,"endColumn":60},{"ruleId":"104","severity":1,"message":"105","line":97,"column":11,"nodeType":"106","endLine":97,"endColumn":60},{"ruleId":"104","severity":1,"message":"105","line":98,"column":11,"nodeType":"106","endLine":98,"endColumn":60},{"ruleId":"104","severity":1,"message":"105","line":99,"column":11,"nodeType":"106","endLine":99,"endColumn":60},{"ruleId":"104","severity":1,"message":"105","line":100,"column":11,"nodeType":"106","endLine":100,"endColumn":60},{"ruleId":"87","severity":1,"message":"91","line":36,"column":23,"nodeType":"89","messageId":"90","endLine":36,"endColumn":37},{"ruleId":"92","severity":1,"message":"93","line":54,"column":6,"nodeType":"94","endLine":54,"endColumn":19,"suggestions":"107"},"no-native-reassign",["108"],"no-negated-in-lhs",["109"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'setGlobalState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'linkArr'. Either include it or remove the dependency array.","ArrayExpression",["110"],"React Hook useEffect has missing dependencies: 'globalState' and 'setGlobalState'. Either include them or remove the dependency array.",["111"],"'gridTemplate' is assigned a value but never used.","'setGridTemplate' is assigned a value but never used.","'topDistance' is assigned a value but never used.",["112"],"'aboutClass' is assigned a value but never used.",["113"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},{"desc":"117","fix":"120"},{"desc":"115","fix":"121"},"Update the dependencies array to be: [globalState, linkArr]",{"range":"122","text":"123"},"Update the dependencies array to be: [globalState, setGlobalState]",{"range":"124","text":"125"},{"range":"126","text":"125"},{"range":"127","text":"125"},{"range":"128","text":"123"},[1925,1938],"[globalState, linkArr]",[1347,1349],"[globalState, setGlobalState]",[487,489],[613,615],[1921,1934]]